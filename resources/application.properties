# --- Configuração da Ligação com o Banco de Dados (PostgreSQL) ---

# URL de ligação ao seu banco de dados. Mude a porta se a sua for diferente (padrão é 5432).
# gestor_cpp_db é o nome do banco que criámos no Passo 1.
spring.datasource.url=jdbc:postgresql://localhost:5432/gestor_cpp_db

# Usuário e senha do seu banco de dados PostgreSQL.
# Altere para o seu usuário e senha. O padrão do Postgres é o usuário "postgres".
spring.datasource.username=postgres
spring.datasource.password=231096

# --- Configuração do Hibernate (JPA) ---

# Esta é a configuração mais importante para o nosso teste.
# "update" diz ao Hibernate para olhar para as nossas entidades Java e criar ou atualizar as tabelas no banco de dados para que correspondam.
spring.jpa.hibernate.ddl-auto=update

# (Opcional, mas muito útil) Mostra no console de execução todos os comandos SQL que o Hibernate está a executar.
spring.jpa.show-sql=true

# (Opcional) Formata o SQL mostrado no console para ser mais legível.
spring.jpa.properties.hibernate.format_sql=true

# --- Configuração para Upload de Ficheiros (Multipart) ---

# Ativa o suporte a multipart, que é necessário para o upload de ficheiros.
spring.servlet.multipart.enabled=true

# Define o tamanho máximo para um único ficheiro. Aqui estamos a definir para 10 Megabytes.
spring.servlet.multipart.max-file-size=10MB

# Define o tamanho máximo total de uma requisição (incluindo todos os ficheiros e dados).
# É uma boa prática que seja um pouco maior que o max-file-size.
spring.servlet.multipart.max-request-size=11MB
